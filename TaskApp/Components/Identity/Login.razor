@page "/login"
@using TaskApp.Identity
@inject IAccountManagement Acct

<PageTitle>Login</PageTitle>

<p class="text-lg font-normal text-gray-500 lg:text-xl dark:text-gray-400">Loggen Sie sich ein!</p>
<AuthorizeView>
    <Authorized>
        <div class="alert alert-success">Du bist als @context.User.Identity?.Name angemeldet.</div>
    </Authorized>
    <NotAuthorized>
        @if (errors)
        {
            @foreach (var error in errorList)
            {
                <div class="alert alert-danger">@error</div>
            }
        }


        <form>
            <div class="grid gap-6 mb-6 md:grid-cols-1" style="text-align: left;width: 250px;">
                <label for="email" class="block mb-0 text-sm font-medium text-gray-900 dark:text-black">E-Mail</label>
                <input @bind-value="email" type="email" id="email" style="text-align: left;" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="john.doe@company.com" required>
          
                <label for="password" class="block mb-0 text-sm font-medium text-gray-900 dark:text-black">Passwort</label>
                <input @bind-value="password" type="password" id="password" style="text-align: left;" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="•••••••••" required>
            </div>

            <button type="button" @onclick="DoLoginAsync" class="text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Login</button>
        </form>

    </NotAuthorized>
</AuthorizeView>

@code {
    private bool success, errors;
    private string email = string.Empty;
    private string password = string.Empty;
    private string[] errorList = [];

    public async Task DoLoginAsync()
    {
        success = errors = false;
        errorList = [];

        if (string.IsNullOrWhiteSpace(email))
        {
            errors = true;
            errorList = ["Email is required."];

            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            errors = true;
            errorList = ["Password is required."];

            return;
        }

        var result = await Acct.LoginAsync(email!, password!);

        if (result.Succeeded)
        {
            success = true;
            email = password = string.Empty;
        }
        else
        {
            errors = true;
            errorList = result.ErrorList;
        }
    }
}
